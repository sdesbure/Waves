// Generated by CoffeeScript 1.4.0

$(function() {
  var base_url, chart, container, nb_series, nb_series_to_zero, number, _i, _len, _ref, _results;
  $('.time-select').change(function() {
    var base_url, chart, nb_series, nb_series_to_zero, number, _i, _results;
    console.log($(this).val());
    chart = $(this).parent().parent().find('.charts-container').first();
    nb_series = parseInt($(chart).attr('data-number'));
    nb_series_to_zero = nb_series - 1;
    base_url = $(chart).attr('data-source');
    _results = [];
    for (number = _i = 0; 0 <= nb_series_to_zero ? _i <= nb_series_to_zero : _i >= nb_series_to_zero; number = 0 <= nb_series_to_zero ? ++_i : --_i) {
      _results.push($.getJSON(base_url + "/" + number + "/" + $(this).val() + ".json", function(data) {
        return $(chart).highcharts().series[data.number].setData(data.values);
      }));
    }
    return _results;
  });
  _ref = $('.charts-container');
  _results = [];
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    container = _ref[_i];
    chart = new Highcharts.Chart({
      chart: {
        renderTo: $(container).attr('id'),
        type: 'spline',
        alignTicks: false
      },
      title: {
        text: $(container).attr('data-title')
      },
      xAxis: {
        type: 'datetime'
      },
      yAxis: [
        {
          type: 'linear',
          title: {
            text: $(container).attr('data-yaxis0')
          }
        }, {
          min: 100,
          max: 1000,
          type: 'linear',
          opposite: true,
          title: {
            text: $(container).attr('data-yaxis1')
          },
          gridLineWidth: 0,
          startOnTick: false
        }
      ],
      series: []
    });
    nb_series = parseInt($(container).attr('data-number'));
    nb_series_to_zero = nb_series - 1;
    base_url = $(container).attr('data-source');
    _results.push((function() {
      var _j, _results1;
      _results1 = [];
      for (number = _j = 0; 0 <= nb_series_to_zero ? _j <= nb_series_to_zero : _j >= nb_series_to_zero; number = 0 <= nb_series_to_zero ? ++_j : --_j) {
        _results1.push($.getJSON(base_url + "/" + number + ".json", function(data) {
          var axis;
          axis = 0;
          if (data.type === "area") {
            axis = 1;
          }
          return chart.addSeries({
            name: data.name,
            data: data.values,
            type: data.type,
            yAxis: axis,
            marker: {
              enabled: false
            }
          });
        }));
      }
      return _results1;
    })());
  }
  return _results;
});
